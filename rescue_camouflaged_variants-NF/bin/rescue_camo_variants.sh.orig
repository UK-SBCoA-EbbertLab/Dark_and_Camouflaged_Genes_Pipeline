#!/bin/usr bash

# Enable bash debugging to log all commands
set -x

echo "Job running on: `hostname`"

# The masked ref fasta
ref=$1

# The bed file to use for extracting reads from each sample
extraction_bed=$2		
echo $extraction_bed

# The bed file to use for calling variants. This will make GATK much faster.
# Using a different bed file here because the regions are expanded a bit
# since reads extend past.
gatk_bed=$3

threads=1

# Path prefix to camo-masked references
# Should look like: path/to/refs/b37-camo_mask
# ref_prefix=$4

bam_list=$4

# Regex to extract sample name from Bam header
regex="SM:([A-Za-z0-9_\-]+)"

# For each ploidy, create a new set for GATK
max_repeat=5
for repeat_num in $(seq 2 1 $max_repeat)
do
	ploidy=$(( $repeat_num * 2 ))
	mkdir -p camo_gvcfs/ploidy_${ploidy}/
	ploidy_list="gvcfs_ploidy${ploidy}.list"
	gvcf_list[$repeat_num]=$ploidy_list
done

# For each input bam, extract reads from camouflaged regions, align
# to masked genome, and call variants with GATK.
while read bam
do

	# Extract the sample name from .bam's read group header
	RG=$(samtools view -H $bam | grep '^@RG' | tail -1)
	[[ $RG =~ $regex ]]
	sampleName=${BASH_REMATCH[1]}

	echo "Found sample name: $sampleName"

	tmp_bam=${sampleName}.sorted.bam

	# Rescue variants for each ploidy (n repeated regions * 2)
	for repeat_num in $(seq 2 1 $max_repeat)
	do
		ploidy=$(( 2 * $repeat_num ))
		echo "testing ploidy level $ploidy"
		ref="${ref_prefix}.ploidy_${ploidy}.fa"

		# Concat bed regions into a single "regions" list that can be passed to
		# samtools on the command line (not as .bed file). For some reason, samtools does not use the .bam index
		# if you pass a .bed file using the -L <bed> option (at least at the time
		# this was written.
		#
		# The fist part is skipping comment lines. 'paste' is a unix command that pastes file lines together.
		regions=$(awk "\$5 == $repeat_num { print \$1\":\"\$2\"-\"\$3 }" $extraction_bed | paste -sd " ")
		if [[ -z $regions ]]; then continue; fi #if regions is empty skip 

		# Extract only reads with MapQ < 10
		time samtools view -h $bam $regions | \
			awk '$5 < 10 || $1 ~ "^@"' | \
			samtools view -hb - | \
			samtools sort -n -m 16G -o $tmp_bam -

		####################
		# Convert to fastq #
		####################

		# Define tmp fastq files
		fq1=${sampleName}_R1.fastq
		fq2=${sampleName}_R2.fastq

		# TODO: Handle bam & cram!
		time bedtools bamtofastq -i $tmp_bam -fq $fq1 -fq2 $fq2 2> /dev/null

		##################
		# Align with BWA #
		##################
		aligned_sam=${sampleName}.sam
		final_bam=${sampleName}.ploidy_${ploidy}.bam
		RG="@RG\tID:group1\tSM:$sampleName\tPL:illumina\tLB:lib1\tPU:unit1"
		time bwa mem -M  \
			-R $RG \
			-t $threads \
			$ref \
			$fq1 $fq2 > $aligned_sam

		# Sort and index bam
		time samtools view -bt $ref $aligned_sam | samtools sort -@ $threads -m 6G -o $final_bam -
		samtools index $final_bam


		##################
		# Call mutations #
		##################

		# I don't see how we can perform base recalibrator since
		# these regions have never been characterized.
		gvcf=${sampleName}.${repeat_num}.g.vcf
		echo $gvcf >> ${gvcf_list[$repeat_num]}
		
		time gatk HaplotypeCaller \
			-R $ref \
			-I $final_bam \
			-L $gatk_bed \
			--sample-ploidy $ploidy \
			--genotyping-mode DISCOVERY \
			--emit-ref-confidence GVCF \
			--dont-use-soft-clipped-bases \
			-O $gvcf

		rm ${final_bam}*
	done
done < $bam_list

#####################################
# Combine gVCFs for each ploidy set #
#####################################
for repeat_num in $(seq 2 1 $max_repeat)
do
	ploidy=$(( $repeat_num * 2 ))
	ref="${ref_prefix}.ploidy_${ploidy}.fa"
	comb_gvcf_file=camo_gvcfs/ploidy_${ploidy}/$JOB_ID.g.vcf
	gatk CombineGVCFs \
		-R $ref \
		-O $comb_gvcf_file \
		--variant ${gvcf_list[$repeat_num]}
done

echo "COMMAND(`date`): DONE."
